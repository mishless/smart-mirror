<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B1101CF2-3267-40BC-828A-2CF963AD0A69}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>SmartMirror</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);$(OPENCV_DIR)\..\..\include;</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);$(OPENCV_DIR)\..\..\include;</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(OPENCV_DIR)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>opencv_world310d.lib;opencv_world310.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(OPENCV_DIR)\..\..\include;$(BOOST_DIR);$(PTHREAD_DIR)\include;D:\Smart Mirror Stuff\opencv\build\include\opencv2\face\include\opencv2;D:\Smart Mirror Stuff\opencv\build\include\opencv2\face\include;D:\Smart Mirror Stuff\opencv\build\include\opencv2</AdditionalIncludeDirectories>
      <AdditionalOptions>-DHAVE_STRUCT_TIMESPEC %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(OPENCV_DIR)\lib;$(BOOST_DIR)\stage\lib;$(PTHREAD_DIR)\lib\x64</AdditionalLibraryDirectories>
      <AdditionalDependencies>pthreadVC2.lib;D:\Smart Mirror Stuff\opencv\build\x64\vc12\lib\opencv_*2412d.lib</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(OPENCV_DIR)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>opencv_world310d.lib;opencv_world310.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>Disabled</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(OPENCV_DIR)\..\..\include;$(BOOST_DIR);$(PTHREAD_DIR)\include;D:\Programiranje\MATLAB\Smart Mirror\C++\smart-mirror\SmartMirror</AdditionalIncludeDirectories>
      <AdditionalOptions>-DHAVE_STRUCT_TIMESPEC %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(OPENCV_DIR)\lib;D:\Downloads\fuzzylite-5.0-win32\fuzzylite-5.0;$(BOOST_DIR)\stage\lib;$(PTHREAD_DIR)\lib\x64</AdditionalLibraryDirectories>
      <AdditionalDependencies>pthreadVC2.lib;D:\Smart Mirror Stuff\opencv\build\x64\vc12\lib\opencv_*2412.lib;D:\Downloads\fuzzylite-5.0-win32\fuzzylite-5.0\*.lib</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\parsers\tinyxml\tinystr.cpp" />
    <ClCompile Include="..\parsers\tinyxml\tinyxml.cpp" />
    <ClCompile Include="..\parsers\tinyxml\tinyxmlerror.cpp" />
    <ClCompile Include="..\parsers\tinyxml\tinyxmlparser.cpp" />
    <ClCompile Include="BPNeuralNetwork.cpp" />
    <ClCompile Include="data_set\data_set.cpp" />
    <ClCompile Include="data_set\instances_information.cpp" />
    <ClCompile Include="data_set\variables_information.cpp" />
    <ClCompile Include="detector.cpp" />
    <ClCompile Include="eyeHelperFunctions.cpp" />
    <ClCompile Include="frame.cpp" />
    <ClCompile Include="FrequencyDetector.cpp" />
    <ClCompile Include="hunter.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="mathematical_model\mathematical_model.cpp" />
    <ClCompile Include="mathematical_model\ordinary_differential_equations.cpp" />
    <ClCompile Include="mathematical_model\plug_in.cpp" />
    <ClCompile Include="model_selection\model_selection.cpp" />
    <ClCompile Include="neural_network\bounding_layer.cpp" />
    <ClCompile Include="neural_network\conditions_layer.cpp" />
    <ClCompile Include="neural_network\independent_parameters.cpp" />
    <ClCompile Include="neural_network\inputs_outputs_information.cpp" />
    <ClCompile Include="neural_network\multilayer_perceptron.cpp" />
    <ClCompile Include="neural_network\neural_network.cpp" />
    <ClCompile Include="neural_network\perceptron.cpp" />
    <ClCompile Include="neural_network\perceptron_layer.cpp" />
    <ClCompile Include="neural_network\probabilistic_layer.cpp" />
    <ClCompile Include="neural_network\scaling_layer.cpp" />
    <ClCompile Include="neural_network\unscaling_layer.cpp" />
    <ClCompile Include="performance_functional\cross_entropy_error.cpp" />
    <ClCompile Include="performance_functional\final_solutions_error.cpp" />
    <ClCompile Include="performance_functional\independent_parameters_error.cpp" />
    <ClCompile Include="performance_functional\inverse_sum_squared_error.cpp" />
    <ClCompile Include="performance_functional\mean_squared_error.cpp" />
    <ClCompile Include="performance_functional\minkowski_error.cpp" />
    <ClCompile Include="performance_functional\neural_parameters_norm.cpp" />
    <ClCompile Include="performance_functional\normalized_squared_error.cpp" />
    <ClCompile Include="performance_functional\outputs_integrals.cpp" />
    <ClCompile Include="performance_functional\performance_functional.cpp" />
    <ClCompile Include="performance_functional\performance_term.cpp" />
    <ClCompile Include="performance_functional\root_mean_squared_error.cpp" />
    <ClCompile Include="performance_functional\solutions_error.cpp" />
    <ClCompile Include="performance_functional\sum_squared_error.cpp" />
    <ClCompile Include="phaseDetector.cpp" />
    <ClCompile Include="recognizer.cpp" />
    <ClCompile Include="testing_analysis\function_regression_testing.cpp" />
    <ClCompile Include="testing_analysis\inverse_problem_testing.cpp" />
    <ClCompile Include="testing_analysis\pattern_recognition_testing.cpp" />
    <ClCompile Include="testing_analysis\testing_analysis.cpp" />
    <ClCompile Include="testing_analysis\time_series_prediction_testing.cpp" />
    <ClCompile Include="timer.cpp" />
    <ClCompile Include="tracker.cpp" />
    <ClCompile Include="training_strategy\conjugate_gradient.cpp" />
    <ClCompile Include="training_strategy\evolutionary_algorithm.cpp" />
    <ClCompile Include="training_strategy\gradient_descent.cpp" />
    <ClCompile Include="training_strategy\levenberg_marquardt_algorithm.cpp" />
    <ClCompile Include="training_strategy\newton_method.cpp" />
    <ClCompile Include="training_strategy\quasi_newton_method.cpp" />
    <ClCompile Include="training_strategy\random_search.cpp" />
    <ClCompile Include="training_strategy\training_algorithm.cpp" />
    <ClCompile Include="training_strategy\training_rate_algorithm.cpp" />
    <ClCompile Include="training_strategy\training_strategy.cpp" />
    <ClCompile Include="utilities\linear_algebraic_equations.cpp" />
    <ClCompile Include="utilities\numerical_differentiation.cpp" />
    <ClCompile Include="utilities\numerical_integration.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="BPNeuralNetwork.h" />
    <ClInclude Include="detector.h" />
    <ClInclude Include="eyeHelperFunctions.h" />
    <ClInclude Include="frame.h" />
    <ClInclude Include="FrequencyDetector.h" />
    <ClInclude Include="hunter.h" />
    <ClInclude Include="opennn.h" />
    <ClInclude Include="phaseDetector.h" />
    <ClInclude Include="recognizer.h" />
    <ClInclude Include="timer.h" />
    <ClInclude Include="main.h" />
    <ClInclude Include="tracker.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>